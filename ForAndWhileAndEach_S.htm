<!DOCTYPE html> 
<html>
<head>
<meta charset="utf-8">
<title>For and While and Each</title>
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script>

document.addEventListener("DOMContentLoaded", function() {
	document.getElementById("happyBtn1").addEventListener("click", happyLoop1);
    document.getElementById("happyBtn2").addEventListener("click", happyLoop2);
    document.getElementById("theTextBox").addEventListener("change", whileLoopCalc);

	}
);

/*
The JS Array Object/Class is a global constructor. An array is a data structure of numerically indexed value.

JS arrays are zero-indexed, so the first element in an array is 0 rather than 1

JS arrays have dynamic lengths, so you don't have to define how many elements an array will have.

JS arrays do not throw out of bounds errors when you access a nonexistent element. Instead, JS returns the value undefined.

JS arrays can index strings, numbers, other arrays, objects, and booleans. You can mix different types with one array if you'd like which is unique to JS!
*/

function happyLoop1(){
    const firstHappy = new Array("I", "AM", "SO", "CONFUSING", "SO", "FAR");
    /*BTS of condensed array
     firstHappy[0] = "I";
     firstHappy[1] = "AM";
     firstHappy[2] = "SO";
     firstHappy[3] = "CONFUSING";
     firstHappy[4] = "SO";
     firstHappy[5] = "FAR";
    */

    //for(instantiate variable to hold initial value; conditional number of times to loop; increment the loop)

    for(let i = 0; i<firstHappy.length; i++){
        console.log(firstHappy[i]); //logs each index until the loop dies
    }//end for loop
}//end happyLoop1()

function happyLoop2(){
    const secondHappy = new Array("I", "AM", "BECOMING","LESS", "CONFUSING");

    //for-of loop
    for(const hpy of secondHappy){
        console.log(hpy[2]);//logs the char of index 2 in each index of the secondHappy array (undefined, undefined, C, S, N)
    }//end for-of loop
}//end happyLoop2()

function whileLoopCalc(){
    const userInput = this.value; //value is a JS property, this refers to the object that made the function run.
    let thisNum = 0; //basically same as i=0;
    while(thisNum <= userInput){
        const answer = thisNum * 2;
        //console.log(thisNum + " * 2 = " + answer);
        const addDiv = document.createElement("div");//create div tag
        const textNode = document.createTextNode(thisNum + " * 2 = " + answer);//create the text to go in div
        addDiv.appendChild(textNode);//put the text in the div
        document.getElementById("myPara").appendChild(addDiv);//add the divs to the document using a preexsiting element
        thisNum++;//incerements the thisNum var by 1 so that the while loop isn't infinite
    }//end while
}//end whileLoopCalc()

jQuery(
    function (){
        $("#myBtn").click(
            function(){
                $("li").each(
                    function(index, object){
                        console.log("The index number is " + index + " and the object content is " + $(object).text());
                    }//end each loop function
                );//end each loop
            }//end click function
        );//end click event
    }//end master function
);//end jQuery
</script>
</head>


<body>
<form>
<h2>for loop</h2>
<input type="button" value="Show Happy Data 1" id="happyBtn1"><br><br>

<h2>for-of loop</h2>
<input type="button" value="Show Happy Data 2" id="happyBtn2"><br><br>


<h2>For the while loop</h2>
	<label for="theTextBox">Input Numeric Value, then press the Tab key:</label>
	<input type="text" id="theTextBox"><br><br><br><br>
    
    <input type="button" value="Build Some div Tags" id="startBtn" style="margin-right: 20px">
	
	<p id="myPara">
	</p>
</form>
<br><br><br>
<h2>For jQuery's each loop</h2>
 I have no idea what these words mean:  
    <ul>
    	<li>Antecubital</li>
        <li>Blargh</li>
        <li>Comproportionation</li>
        <li>Diapason</li>
        <li>Empyrean</li>
    </ul>
    <form>
    	<input type="button" value="Read the List" id="myBtn">
    </form>
</body>
</html>
